<!DOCTYPE html>
<html>
  <head>
    <title>Geolocation</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <style>
      html, body, #map-canvas {
        height: 100%;
        margin: 0px;
        padding: 0px
      }
    </style>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>

    <script>
// Note: This example requires that you consent to location sharing when
// prompted by your browser. If you see a blank space instead of the map, this
// is probably because you have denied permission for location sharing.

var map;
 //var infowindow;
  var geocoder;
function initialize() {
	geocoder = new google.maps.Geocoder();
	
	//document.getElementById('address').style.height =  "30px";
	//document.getElementById('geoButton').style.height = "35px";
	//document.getElementById('map-canvas').style.height = document.body.clientHeight-38+"px";
	//document.getElementById('address').style.width=document.body.clientWidth-document.getElementById('geoButton').style.width-10+"px";
  var mapOptions = {
    zoom: 14,
	panControl: false,   
  zoomControl: true,  
  mapTypeControl: false,  
  scaleControl: false,  
  streetViewControl: false,  
  overviewMapControl: false
  };
  map = new google.maps.Map(document.getElementById('map-canvas'),
      mapOptions);
	 var pos = new google.maps.LatLng(22,114); 
       
   //infowindow = new google.maps.InfoWindow({
      //  map: map,
    //    position: pos,
    //    content: 'I am here'
    //  });
 // getLocation();
   isNotReturnGeolocationResult();
    // 3 seconds after the center of the map has changed, pan back to the
    // marker.
    //window.setTimeout(function() {
      //map.panTo(marker.getPosition());
    //}, 3000);
      google.maps.event.addListener(map, 'center_changed', function() {
		//infowindow.setPosition(	map.getCenter());
		//infowindow.setContent(map.getCenter().lat()+'_'+map.getCenter().lng());
		setPostion(map.getCenter().lat(),map.getCenter().lng() );
    // 3 seconds after the center of the map has changed, pan back to the
    // marker.
    //window.setTimeout(function() {
      //map.panTo(marker.getPosition());
    //}, 3000);
  });
}
 var arrPalmMarker=new Array();
function addUser(imgurl,lat,lng,afid,name,namecolor){
	/* var image = {
			url: imgurl, 
			scaledSize: new google.maps.Size(40, 40),
		// This marker is 20 pixels wide by 32 pixels tall.
	  //  size: new google.maps.Size(32, 32),
		// The origin for this image is 0,0.
	   // origin: new google.maps.Point(0,0),
		// The anchor for this image is the base of the flagpole at 0,32.
	   // anchor: new google.maps.Point(0, 32)
	  };
	  
	  var myLatLng = new google.maps.LatLng(lat,lng);
	var info = new google.maps.InfoWindow({
		  position: myLatLng,
		  map: map,
		 content: '<div style="color:#'+namecolor+';width:64px;">'+name+'</div><div> <img src='+imgurl+'  width="40" height="40" onclick="clickIntoProfile(\''+afid+'\','+lat+','+lng+')"> </div>'    
			
	  });  
	  */
	  var overlay = new MyMarker(map ,
								{latlng:new google.maps.LatLng(lat, lng)
								,labelText:name
								,image:imgurl
								,afid:afid
								,namecolor:namecolor
								//,clickFun:clickIntoProfile(this.afid,this.latlng)
								}
							);  
	  arrPalmMarker.push(overlay);
} 

/***************自定义叠加层，可作为站点显示在地图上******************/  
    function MyMarker(map, options) {     
      // Now initialize all properties.     
      this.latlng = options.latlng; //设置图标的位置  
      this.image_ = options.image;  //设置图标的图片  
	  this.afid   =options.afid;  
	  this.namecolor=options.namecolor;
      this.labelText = options.labelText || '标记';  
      this.labelClass = options.labelClass || 'shadow';//设置文字的样式  
       this.clickFun =  options.clickFun ;//注册点击事件  
  //    this.labelOffset = options.labelOffset || new google.maps.Size(8, -33);  
      this.map_ = map;      
  
      this.div_ = null;     
      // Explicitly call setMap() on this overlay     
      this.setMap(map);   
    }   
    MyMarker.prototype = new google.maps.OverlayView();  
    //初始化图标  
    MyMarker.prototype.onAdd = function() {      
        // Note: an overlay's receipt of onAdd() indicates that    
        // the map's panes are now available for attaching     
        // the overlay to the map via the DOM.      
        // Create the DIV and set some basic attributes.    
       var div = document.createElement('DIV'); //创建存放图片和文字的div  
			div.style.background="#ffffff";
			div.style.padding = "4px";
			div.style.position = "absolute"; 
		   // div.style.cursor = "hand";  
			//div.onclick = function() { alert('blah'); };//this.clickFun ||function(){};//注册click事件，没有定义就为空函数  
			
			//function(){
	// alert('asdasdasdasdasdsa');
	 //showAndroidToast('asdasdasdasdsda');
  //javascript:myInterfaceName.clickMarker(afid,latlng.lat(),latlng.lng());  
  
		//	};//clickIntoProfile(this.afid,this.latlng);
			//this.clickFun ||function(){};//注册click事件，没有定义就为空函数  
			
			// Create an IMG element and attach it to the DIV.    
        var img = document.createElement("img"); //创建图片元素  
			img.src = this.image_;    
			img.style.padding = "1px";  
			img.style.width = "32px";     
			img.style.height = "32px";
            img.style.float = "left";
            img.style.border = "2px solid # CCCCCC";
          //  img.style.margin-right = "4px";
        //初始化文字标签  
        var label = document.createElement('div');//创建文字标签  
            label.className = this.labelClass;  
            label.innerHTML = this.labelText;  
            //label.style.position = 'absolute';  
            label.style.width = '80px';
        //  label.style.fontWeight = "bold";  
            label.style.position = "relative";
            label.style.padding = "4px";  
            label.style.fontSize = "10px";  
			label.style.color =this.namecolor;
        //  label.style.fontFamily = "Courier New";  
  
        div.appendChild(img);     
        div.appendChild(label);

          
        this.div_ = div;     
        // We add an overlay to a map via one of the map's panes.    
        // We'll add this overlay to the overlayImage pane.    
      
		
		
		var _afid=this.afid;
		var _pos=this.latlng;
	    google.maps.event.addDomListener(div, 'click', function() { 
		   clickIntoProfile(_afid,_pos );
		   // clickIntoProfile(markthis.afid,markthis.latLng.lat(),markthis.latLng.lng()) ;
	   });
 
	  var panes = this.getPanes();    
        //panes.overlayLayer.appendChild(div);    
		 panes.overlayMouseTarget.appendChild(div);
    }  
      //绘制图标，主要用于控制图标的位置  
    MyMarker.prototype.draw = function() {      
          // Size and position the overlay. We use a southwest and northeast     
          // position of the overlay to peg it to the correct position and size.    
          // We need to retrieve the projection from this overlay to do this.    
          var overlayProjection = this.getProjection();     
          // Retrieve the southwest and northeast coordinates of this overlay    
          // in latlngs and convert them to pixels coordinates.    
          // We'll use these coordinates to resize the DIV.    
          var position = overlayProjection.fromLatLngToDivPixel(this.latlng);   //将地理坐标转换成屏幕坐标  
        //  var ne = overlayProjection.fromLatLngToDivPixel(this.bounds_.getNorthEast());      
          // Resize the image's DIV to fit the indicated dimensions.     
          var div = this.div_;    
          div.style.left =position.x-45 + 'px';    
          div.style.top  =position.y-17 + 'px';    
        //控制图标的大小  
          div.style.width = '90px';    
          div.style.height ='34px';  
      }  
    MyMarker.prototype.onRemove = function() {     
          this.div_.parentNode.removeChild(this.div_);     
          this.div_ = null;   
      }  
  
      //Note that the visibility property must be a string enclosed in quotes   
    MyMarker.prototype.hide = function() {     
          if (this.div_) {       
            this.div_.style.visibility = "hidden";     
          }   
      }    
    MyMarker.prototype.show = function() {     
          if (this.div_) {       
          this.div_.style.visibility = "visible";     
          }   
      }   
      //显示或隐藏图标  
    MyMarker.prototype.toggle = function() {     
        if (this.div_) {       
            if (this.div_.style.visibility == "hidden") {         
            this.show();       
            } else {         
            this.hide();       
            }     
        }  
      }   

 function clickIntoProfile(afid,latlng){
  javascript:myInterfaceName.clickMarker(afid,latlng.lat(),latlng.lng());  
 }
 var directionsDisplay = new google.maps.DirectionsRenderer();   //地图路线显示对象
 function routeDest(oLat,oLng,dLat,dLng) {
		var origin = new google.maps.LatLng(oLat,oLng); 
		var destination = new google.maps.LatLng(dLat,dLng); 
           var mode = google.maps.DirectionsTravelMode.DRIVING; //谷歌地图路线指引的模式
         
           var directionsService = new google.maps.DirectionsService();    //地图路线服务对象
           var directionsVisible = false;  //是否显示路线
           directionsDisplay.setMap(null);
           directionsDisplay.setMap(map);
         //  var Navigpoints = []; //起终点
         //  google.maps.event.addListener(map, "click", function(evt) {
          //     if (Navigpoints.length == 0) {
           //        if (confirm("是否将当前点设为起点？")) {
          //             Navigpoints.push(evt.latLng);
          //         }
           //    } else {
           //        if (Navigpoints.length >= 2) { points = []; google.maps.event.clearListeners(map, "click"); return; }
          //         if (confirm("是否将当前点设为终点？")) {
         //              Navigpoints.push(evt.latLng);
                       var request = {
                           origin: origin , //起点
                           destination: destination, //终点
                           travelMode: mode,
                           optimizeWaypoints: true,
                           avoidHighways: false,
                           avoidTolls: false
                       };
                       directionsService.route(
                        request,
                        function(response, status) {
                            if (status == google.maps.DirectionsStatus.OK) {
                                directionsDisplay.setDirections(response);
                                //定时清除线路
                               // setTimeout(function() { directionsDisplay.setMap(null) }, 8000);
                            }
                        }
                    );
                 //  }
              // }

          // });
           directionsVisible = true;
       }
 function clearAllinfoWin(){
	 for (var i = 0; i < arrPalmMarker.length  ; i++) {
       arrPalmMarker[i].setMap(null);
    }
	arrPalmMarker.length=0;
 }
function setMapPos( lat,lng) {
	var pos2 = new google.maps.LatLng(lat, lng);
	 map.setCenter(pos2); 
}
function getLocation(){
 // Try HTML5 geolocation
  if(navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var pos = new google.maps.LatLng(position.coords.latitude,
                                       position.coords.longitude); 
       
	//infowindow.setPosition(	map.getCenter());
	 setGeoLocation(pos.lat(),pos.lng() );
      map.setCenter(pos);
	  
    }, function() {
      handleNoGeolocation(true);
    });
  } else {
    // Browser doesn't support Geolocation
    handleNoGeolocation(false);
  }
  
  

}
function handleNoGeolocation(errorFlag) {
  if (errorFlag) {
    var content = 'Error: The Geolocation service failed.';
  } else {
    var content = 'Error: Your browser doesn\'t support geolocation.';
  }
  
  showCannotGetLocation(content );
}
function showCannotGetLocation(toast ) {       
    javascript:myInterfaceName.showCannotGetLocation(toast);   
 }
function showAndroidToast(toast) {       
    javascript:myInterfaceName.showToast(toast);   
 }
 function showAndroidAddr(toast) {       
    javascript:myInterfaceName.showAddr(toast);   
 }
 
 function setPostion(lat,lng) {       
 //codeLatLng(lat,lng);
    javascript:myInterfaceName.setPostion(lat,lng);   
 }
 function setGeoLocation(lat,lng) {       
    javascript:myInterfaceName.setGeoLocation(lat,lng);   
 }
 function isNotReturnGeolocationResult( ) { //有的手机入F7 不能定位却不会返回不能定位的结果，也不会进入定位验证的入口 需要判断一下手动设置      
    javascript:myInterfaceName.isNotReturnGeolocationResult( );   
 }
 
 
 function initInputSizeTextMapPos(height,lat,lng){
	var pos2 = new google.maps.LatLng(lat, lng);
	 map.setCenter(pos2); 
	//document.getElementById('address').style.height = height + "px";
	//document.getElementById('geoButton').style.height = height + "px";
	//document.getElementById('geoButton').style.value = buttonText;
 }
function codeAddress(place) { 
  var address =place; //document.getElementById('address').value;
  geocoder.geocode( { 'address': address}, function(results, status) {
    if (status == google.maps.GeocoderStatus.OK) { 
      map.setCenter(results[0].geometry.location);
	  setPostion(map.getCenter().lat(),map.getCenter().lng() ); 
    } else {
      showAndroidToast('Geocode was not successful for the following reason: ' + status);
    }
  });
}


function codeLatLng(lat,lng) { 
  var latlng = new google.maps.LatLng(lat, lng);
  geocoder.geocode({'latLng': latlng}, function(results, status) {
    if (status == google.maps.GeocoderStatus.OK) {
      if (results[1]) { 
			  showAndroidAddr(results[1].formatted_address );
      } else {
        showAndroidToast('No results found');
      }
    } else {
      showAndroidToast('Geocoder failed due to: ' + status);
    }
  });
}
google.maps.event.addDomListener(window, 'load', initialize);

    </script>
  </head>
  <body>    
	<div id="map-canvas">
	</div>
  </body>
</html>